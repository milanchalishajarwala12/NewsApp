{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/MilanChalishajarwala/Desktop/ReactNative/HybridApp/Components/Forms/LoginForm.js\";\nimport React, { useState } from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { color } from 'react-native-reanimated';\n\nfunction LoginForm() {\n  var navigation = useNavigation();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      userName = _useState2[0],\n      setUserName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  return React.createElement(View, {\n    style: Styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    required: true,\n    onChangeText: function onChangeText(text) {\n      return setUserName(text);\n    },\n    value: userName,\n    style: Styles.textField,\n    placeholder: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    required: true,\n    secureTextEntry: true,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    value: password,\n    style: Styles.textField,\n    placeholder: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    onPress: function onPress() {\n      if (userName && password) {\n        firebase.auth().signInWithEmailAndPassword(userName, password);\n        {\n          navigation.navigate('Articles');\n        }\n      } else {\n        Alert.alert('Please complete  all the details');\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"Login\"));\n}\n\nvar Styles = StyleSheet.create({\n  container: {\n    marginTop: 20,\n    marginHorizontal: 10,\n    alignItems: 'stretch'\n  },\n  textField: {\n    marginVertical: 10,\n    padding: 5,\n    borderRadius: 5,\n    borderColor: '#373737',\n    borderWidth: 0.5,\n    height: 40\n  },\n  loginButtonContainer: {\n    marginVertical: 10,\n    borderRadius: 5,\n    borderColor: '#373737',\n    marginHorizontal: 50,\n    height: 40,\n    borderWidth: 0.5,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#373737'\n  },\n  loginButtonText: {\n    color: 'white'\n  }\n});\nexport default LoginForm;","map":{"version":3,"sources":["/Users/MilanChalishajarwala/Desktop/ReactNative/HybridApp/Components/Forms/LoginForm.js"],"names":["React","useState","useNavigation","firebase","color","LoginForm","navigation","userName","setUserName","password","setPassword","Styles","container","text","textField","auth","signInWithEmailAndPassword","navigate","Alert","alert","StyleSheet","create","marginTop","marginHorizontal","alignItems","marginVertical","padding","borderRadius","borderColor","borderWidth","height","loginButtonContainer","justifyContent","backgroundColor","loginButtonText"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAO,KAAKC,QAAZ,MAA0B,cAA1B;AAEA,OAAO,eAAP;;;;;;;;AAWA,SAASC,KAAT,QAAsB,yBAAtB;;AAEA,SAASC,SAAT,GAAqB;AACnB,MAAMC,UAAU,GAAGJ,aAAa,EAAhC;;AADmB,kBAEaD,QAAQ,CAAC,EAAD,CAFrB;AAAA;AAAA,MAEZM,QAFY;AAAA,MAEFC,WAFE;;AAAA,mBAGaP,QAAQ,CAAC,EAAD,CAHrB;AAAA;AAAA,MAGZQ,QAHY;AAAA,MAGFC,WAHE;;AAKnB,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,aAAUL,WAAW,CAACK,IAAD,CAArB;AAAA,KAFhB;AAGE,IAAA,KAAK,EAAEN,QAHT;AAIE,IAAA,KAAK,EAAEI,MAAM,CAACG,SAJhB;AAKE,IAAA,WAAW,EAAC,OALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,oBAAC,SAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,eAAe,MAFjB;AAGE,IAAA,YAAY,EAAE,sBAACD,IAAD;AAAA,aAAUH,WAAW,CAACG,IAAD,CAArB;AAAA,KAHhB;AAIE,IAAA,KAAK,EAAEJ,QAJT;AAKE,IAAA,KAAK,EAAEE,MAAM,CAACG,SALhB;AAME,IAAA,WAAW,EAAC,UANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAiBE,oBAAC,IAAD;AACE,IAAA,OAAO,EAAE,mBAAM;AACb,UAAIP,QAAQ,IAAIE,QAAhB,EAA0B;AACxBN,QAAAA,QAAQ,CAACY,IAAT,GAAgBC,0BAAhB,CAA2CT,QAA3C,EAAqDE,QAArD;AACA;AACEH,UAAAA,UAAU,CAACW,QAAX,CAAoB,UAApB;AACD;AACF,OALD,MAKO;AACLC,QAAAA,KAAK,CAACC,KAAN,CAAY,kCAAZ;AACD;AACF,KAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAjBF,CADF;AAoCD;;AAED,IAAMR,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC/BT,EAAAA,SAAS,EAAE;AAAEU,IAAAA,SAAS,EAAE,EAAb;AAAiBC,IAAAA,gBAAgB,EAAE,EAAnC;AAAuCC,IAAAA,UAAU,EAAE;AAAnD,GADoB;AAE/BV,EAAAA,SAAS,EAAE;AACTW,IAAAA,cAAc,EAAE,EADP;AAETC,IAAAA,OAAO,EAAE,CAFA;AAGTC,IAAAA,YAAY,EAAE,CAHL;AAITC,IAAAA,WAAW,EAAE,SAJJ;AAKTC,IAAAA,WAAW,EAAE,GALJ;AAMTC,IAAAA,MAAM,EAAE;AANC,GAFoB;AAU/BC,EAAAA,oBAAoB,EAAE;AACpBN,IAAAA,cAAc,EAAE,EADI;AAEpBE,IAAAA,YAAY,EAAE,CAFM;AAGpBC,IAAAA,WAAW,EAAE,SAHO;AAIpBL,IAAAA,gBAAgB,EAAE,EAJE;AAKpBO,IAAAA,MAAM,EAAE,EALY;AAMpBD,IAAAA,WAAW,EAAE,GANO;AAOpBG,IAAAA,cAAc,EAAE,QAPI;AAQpBR,IAAAA,UAAU,EAAE,QARQ;AASpBS,IAAAA,eAAe,EAAE;AATG,GAVS;AAqB/BC,EAAAA,eAAe,EAAE;AACf9B,IAAAA,KAAK,EAAE;AADQ;AArBc,CAAlB,CAAf;AA0BA,eAAeC,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport * as firebase from 'firebase/app';\n//import 'firebase/analytics';\nimport 'firebase/auth';\n\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TextInput,\n  Button,\n  Alert,\n  TouchableOpacity,\n} from 'react-native';\nimport { color } from 'react-native-reanimated';\n\nfunction LoginForm() {\n  const navigation = useNavigation();\n  const [userName, setUserName] = useState('');\n  const [password, setPassword] = useState('');\n\n  return (\n    <View style={Styles.container}>\n      <TextInput\n        required\n        onChangeText={(text) => setUserName(text)}\n        value={userName}\n        style={Styles.textField}\n        placeholder=\"Email\"\n      />\n      <TextInput\n        required\n        secureTextEntry\n        onChangeText={(text) => setPassword(text)}\n        value={password}\n        style={Styles.textField}\n        placeholder=\"Password\"\n      />\n      {/* <View style={Styles.loginButtonContainer} title=\"Login\"> */}\n      <Text\n        onPress={() => {\n          if (userName && password) {\n            firebase.auth().signInWithEmailAndPassword(userName, password);\n            {\n              navigation.navigate('Articles');\n            }\n          } else {\n            Alert.alert('Please complete  all the details');\n          }\n        }}\n        // style={Styles.loginButtonText}\n      >\n        Login\n      </Text>\n      {/* </View> */}\n    </View>\n  );\n}\n\nconst Styles = StyleSheet.create({\n  container: { marginTop: 20, marginHorizontal: 10, alignItems: 'stretch' },\n  textField: {\n    marginVertical: 10,\n    padding: 5,\n    borderRadius: 5,\n    borderColor: '#373737',\n    borderWidth: 0.5,\n    height: 40,\n  },\n  loginButtonContainer: {\n    marginVertical: 10,\n    borderRadius: 5,\n    borderColor: '#373737',\n    marginHorizontal: 50,\n    height: 40,\n    borderWidth: 0.5,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#373737',\n  },\n  loginButtonText: {\n    color: 'white',\n  },\n});\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}